[{"C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\index.tsx":"1","C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\reportWebVitals.ts":"2","C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\App.tsx":"3","C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\public\\Login.tsx":"4","C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\Wrapper.tsx":"5","C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\components\\Nav.tsx":"6","C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\components\\Menu.tsx":"7","C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\public\\Register.tsx":"8","C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\dashboard\\Dashboard.tsx":"9","C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\users\\Users.tsx":"10","C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\users\\UserEdit.tsx":"11","C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\RedirectToDashboard.tsx":"12","C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\orders\\OrderItems.tsx":"13","C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\roles\\RoleCreate.tsx":"14","C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\products\\ProductCreate.tsx":"15","C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\roles\\Roles.tsx":"16","C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\roles\\RoleEdit.tsx":"17","C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\products\\Products.tsx":"18","C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\products\\ProductEdit.tsx":"19","C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\orders\\Orders.tsx":"20","C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\profile\\Profile.tsx":"21","C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\users\\UserCreate.tsx":"22","C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\redux\\actions\\setUserAction.ts":"23","C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\components\\ImageUpload.tsx":"24","C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\components\\Deleter.tsx":"25","C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\components\\Paginator.tsx":"26","C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\classes\\user.ts":"27","C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\classes\\role.ts":"28"},{"size":500,"mtime":1608340362159,"results":"29","hashOfConfig":"30"},{"size":425,"mtime":1607147400445,"results":"31","hashOfConfig":"30"},{"size":2047,"mtime":1608592835835,"results":"32","hashOfConfig":"30"},{"size":1716,"mtime":1608340362207,"results":"33","hashOfConfig":"30"},{"size":1592,"mtime":1608435982372,"results":"34","hashOfConfig":"30"},{"size":1173,"mtime":1608592371004,"results":"35","hashOfConfig":"30"},{"size":1577,"mtime":1608516441506,"results":"36","hashOfConfig":"30"},{"size":2776,"mtime":1608340799122,"results":"37","hashOfConfig":"30"},{"size":952,"mtime":1608437021794,"results":"38","hashOfConfig":"30"},{"size":2993,"mtime":1608592496220,"results":"39","hashOfConfig":"30"},{"size":3350,"mtime":1608435856424,"results":"40","hashOfConfig":"30"},{"size":176,"mtime":1608434143309,"results":"41","hashOfConfig":"30"},{"size":1511,"mtime":1608517677360,"results":"42","hashOfConfig":"30"},{"size":2489,"mtime":1608436157262,"results":"43","hashOfConfig":"30"},{"size":2160,"mtime":1608436230494,"results":"44","hashOfConfig":"30"},{"size":2246,"mtime":1608436157346,"results":"45","hashOfConfig":"30"},{"size":3072,"mtime":1608436157314,"results":"46","hashOfConfig":"30"},{"size":3344,"mtime":1608591636080,"results":"47","hashOfConfig":"30"},{"size":2899,"mtime":1608591593310,"results":"48","hashOfConfig":"30"},{"size":2840,"mtime":1608436261079,"results":"49","hashOfConfig":"30"},{"size":3572,"mtime":1608592360624,"results":"50","hashOfConfig":"30"},{"size":2522,"mtime":1608435740013,"results":"51","hashOfConfig":"30"},{"size":159,"mtime":1608436341129,"results":"52","hashOfConfig":"30"},{"size":1146,"mtime":1608436341209,"results":"53","hashOfConfig":"30"},{"size":589,"mtime":1608436341191,"results":"54","hashOfConfig":"30"},{"size":850,"mtime":1608436341289,"results":"55","hashOfConfig":"30"},{"size":741,"mtime":1608517291741,"results":"56","hashOfConfig":"30"},{"size":259,"mtime":1608352998157,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"awsmgv",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\index.tsx",[],[],"C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\reportWebVitals.ts",[],"C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\App.tsx",[],"C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\public\\Login.tsx",[],"C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\Wrapper.tsx",["121","122"],"import React, { Component, Dispatch, PropsWithChildren } from 'react';\nimport Nav from './components/Nav';\nimport Menu from './components/Menu';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { User } from '../classes/user';\nimport setUser from '../redux/actions/setUserAction';\n\nclass Wrapper extends Component<PropsWithChildren<any>> {\n  state = {\n    redirect: false\n  };\n  componentDidMount = async () => {\n    try {\n      const response = await axios.get('user');\n\n      const user: User = response.data.data;\n\n      this.props.setUser(\n        new User(\n          user.id,\n          user.first_name,\n          user.last_name,\n          user.email,\n          user.role,\n          user.permissions\n        )\n      );\n    } catch (e) {\n      this.setState({\n        redirect: true\n      });\n    }\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={'/login'} />;\n    }\n\n    return (\n      <>\n        <Nav />\n\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <Menu />\n\n            <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-md-4\">\n              {this.props.children}\n            </main>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: { user: User }) => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => {\n  return {\n    setUser: (user: User) => dispatch(setUser(user))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wrapper);\n","C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\components\\Nav.tsx",[],"C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\components\\Menu.tsx",[],"C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\public\\Register.tsx",[],"C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\dashboard\\Dashboard.tsx",[],"C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\users\\Users.tsx",[],"C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\users\\UserEdit.tsx",["123"],"import React, { Component, PropsWithRef, SyntheticEvent } from 'react';\nimport Wrapper from '../Wrapper';\nimport { Role } from '../../classes/role';\nimport axios from 'axios';\nimport { User } from '../../classes/user';\nimport { Redirect } from 'react-router-dom';\n\nclass UserEdit extends Component<{ match: PropsWithRef<any> }> {\n  state = {\n    roles: [],\n    first_name: '',\n    last_name: '',\n    email: '',\n    role_id: 0,\n    redirect: false\n  };\n  id = 0;\n  first_name = '';\n  last_name = '';\n  email = '';\n  role_id = 0;\n\n  componentDidMount = async () => {\n    this.id = this.props.match.params.id;\n\n    const rolesCall = await axios.get('roles');\n\n    const userCall = await axios.get(`users/${this.id}`);\n\n    const user: User = userCall.data.data;\n\n    this.setState({\n      first_name: user.first_name,\n      last_name: user.last_name,\n      email: user.email,\n      role_id: user.role.id,\n      roles: rolesCall.data.data\n    });\n  };\n\n  submit = async (e: SyntheticEvent) => {\n    e.preventDefault();\n\n    await axios.put(`users/${this.id}`, {\n      first_name: this.first_name,\n      last_name: this.last_name,\n      email: this.email,\n      role_id: this.role_id\n    });\n\n    this.setState({\n      redirect: true\n    });\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={'/users'} />;\n    }\n\n    return (\n      <Wrapper>\n        <form onSubmit={this.submit}>\n          <div className=\"form-group\">\n            <label>First Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"first_name\"\n              defaultValue={(this.first_name = this.state.first_name)}\n              onChange={(e) => (this.first_name = e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Last Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"last_name\"\n              defaultValue={(this.last_name = this.state.last_name)}\n              onChange={(e) => (this.last_name = e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Email</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"email\"\n              defaultValue={(this.email = this.state.email)}\n              onChange={(e) => (this.email = e.target.value)}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Role</label>\n            <select\n              name=\"role_id\"\n              className=\"form-control\"\n              value={(this.role_id = this.state.role_id)}\n              onChange={(e) => {\n                this.role_id = parseInt(e.target.value);\n                this.setState({\n                  role_id: this.role_id\n                });\n              }}\n            >\n              <option>Select Role</option>\n              {this.state.roles.map((role: Role) => {\n                return (\n                  <option key={role.id} value={role.id}>\n                    {role.name}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          <button className=\"btn btn-outline-secondary\">Save</button>\n        </form>\n      </Wrapper>\n    );\n  }\n}\n\nexport default UserEdit;\n","C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\RedirectToDashboard.tsx",[],"C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\orders\\OrderItems.tsx",[],"C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\roles\\RoleCreate.tsx",[],"C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\products\\ProductCreate.tsx",[],"C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\roles\\Roles.tsx",[],"C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\roles\\RoleEdit.tsx",["124"],"import React, { Component, SyntheticEvent } from 'react';\nimport Wrapper from '../Wrapper';\nimport axios from 'axios';\nimport { Permission } from '../../classes/permission';\nimport { Redirect } from 'react-router-dom';\nimport { Role } from '../../classes/role';\n\nclass RoleEdit extends Component<{ match: any }> {\n  state = {\n    name: '',\n    selected: [],\n    permissions: [],\n    redirect: false\n  };\n  selected: number[] = [];\n  name = '';\n  id = 0;\n\n  componentDidMount = async () => {\n    this.id = this.props.match.params.id;\n\n    const permissionCall = await axios.get('permissions');\n\n    const roleCall = await axios.get(`roles/${this.id}`);\n\n    const role: Role = roleCall.data.data;\n\n    this.selected = role.permissions.map((p: Permission) => p.id);\n\n    this.setState({\n      name: role.name,\n      selected: this.selected,\n      permissions: permissionCall.data.data\n    });\n  };\n\n  check = (id: number) => {\n    if (this.isChecked(id)) {\n      this.selected = this.selected.filter((s) => s !== id);\n      return;\n    }\n\n    this.selected.push(id);\n  };\n\n  isChecked = (id: number) => {\n    return this.state.selected.filter((s) => s === id).length > 0;\n  };\n\n  submit = async (e: SyntheticEvent) => {\n    e.preventDefault();\n\n    await axios.put(`roles/${this.id}`, {\n      name: this.name,\n      permissions: this.selected\n    });\n\n    this.setState({\n      redirect: true\n    });\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={'/roles'} />;\n    }\n\n    return (\n      <Wrapper>\n        <form onSubmit={this.submit}>\n          <div className=\"form-group row\">\n            <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">\n              Name\n            </label>\n            <div className=\"col-sm-10\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"name\"\n                id=\"name\"\n                defaultValue={(this.name = this.state.name)}\n                onChange={(e) => (this.name = e.target.value)}\n              />\n            </div>\n          </div>\n\n          <div className=\"form-group row\">\n            <label className=\"col-sm-2 col-form-label\">Permissions</label>\n            <div className=\"col-sm-10\">\n              {this.state.permissions.map((p: Permission) => {\n                return (\n                  <div\n                    className=\"form-check form-check-inline col-3\"\n                    key={p.id}\n                  >\n                    <input\n                      className=\"form-check-input\"\n                      type=\"checkbox\"\n                      value={p.id}\n                      defaultChecked={this.isChecked(p.id)}\n                      onChange={(e) => this.check(p.id)}\n                    />\n                    <label className=\"form-check-label\">{p.name}</label>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n\n          <button className=\"btn btn-outline-secondary\">Save</button>\n        </form>\n      </Wrapper>\n    );\n  }\n}\n\nexport default RoleEdit;\n","C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\products\\Products.tsx",[],"C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\products\\ProductEdit.tsx",[],"C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\orders\\Orders.tsx",[],"C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\profile\\Profile.tsx",["125","126"],"C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\users\\UserCreate.tsx",[],"C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\redux\\actions\\setUserAction.ts",[],"C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\components\\ImageUpload.tsx",["127"],"import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass ImageUpload extends Component<{ value: string; imageChanged: any }> {\n  image = '';\n\n  upload = async (files: FileList | null) => {\n    if (files === null) return;\n\n    const data = new FormData();\n    data.append('image', files[0]);\n\n    const response = await axios.post('upload', data);\n\n    this.image = response.data.url;\n\n    this.props.imageChanged(this.image);\n  };\n\n  render() {\n    return (\n      <div className=\"input-group\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          name=\"image\"\n          value={(this.image = this.props.value)}\n          onChange={(e) => {\n            this.image = e.target.value;\n            this.props.imageChanged(this.image);\n          }}\n        />\n        <div className=\"input-group-append\">\n          <label className=\"btn btn-primary\">\n            Upload{' '}\n            <input\n              type=\"file\"\n              hidden\n              onChange={(e) => this.upload(e.target.files)}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ImageUpload;\n","C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\components\\Deleter.tsx",["128"],"import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Deleter extends Component<{\n  id: number;\n  endpoint: string;\n  handleDelete: any;\n}> {\n  delete = async () => {\n    if (window.confirm('Are you sure you want to delete this record?')) {\n      await axios.delete(`${this.props.endpoint}/${this.props.id}`);\n\n      this.props.handleDelete(this.props.id);\n    }\n  };\n\n  render() {\n    return (\n      <a\n        className=\"btn btn-sm btn-outline-secondary\"\n        onClick={() => this.delete()}\n      >\n        Delete\n      </a>\n    );\n  }\n}\n\nexport default Deleter;\n","C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\secure\\components\\Paginator.tsx",["129"],"import React, { Component } from 'react';\n\nclass Paginator extends Component<{ lastPage: number; handlePageChange: any }> {\n  page = 1;\n\n  prev = () => {\n    if (this.page === 1) return;\n\n    this.page--;\n\n    this.props.handlePageChange(this.page);\n  };\n\n  next = () => {\n    if (this.page === this.props.lastPage) return;\n\n    this.page++;\n\n    this.props.handlePageChange(this.page);\n  };\n\n  render() {\n    return (\n      <nav>\n        <ul className=\"pagination\">\n          <li className=\"page-item\">\n            <a href=\"#\" className=\"page-link\" onClick={this.prev}>\n              Previous\n            </a>\n          </li>\n          <li className=\"page-item\">\n            <a href=\"#\" className=\"page-link\" onClick={this.next}>\n              Next\n            </a>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Paginator;\n","C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\classes\\user.ts",[],"C:\\Users\\taiga\\Github\\Typescript\\typescript-admin\\admin\\src\\classes\\role.ts",[],{"ruleId":"130","severity":1,"message":"131","line":10,"column":51,"nodeType":"132","messageId":"133","endLine":10,"endColumn":54,"suggestions":"134"},{"ruleId":"130","severity":1,"message":"131","line":66,"column":48,"nodeType":"132","messageId":"133","endLine":66,"endColumn":51,"suggestions":"135"},{"ruleId":"130","severity":1,"message":"131","line":8,"column":56,"nodeType":"132","messageId":"133","endLine":8,"endColumn":59,"suggestions":"136"},{"ruleId":"130","severity":1,"message":"131","line":8,"column":43,"nodeType":"132","messageId":"133","endLine":8,"endColumn":46,"suggestions":"137"},{"ruleId":"130","severity":1,"message":"131","line":8,"column":33,"nodeType":"132","messageId":"133","endLine":8,"endColumn":36,"suggestions":"138"},{"ruleId":"130","severity":1,"message":"131","line":127,"column":36,"nodeType":"132","messageId":"133","endLine":127,"endColumn":39,"suggestions":"139"},{"ruleId":"130","severity":1,"message":"131","line":4,"column":68,"nodeType":"132","messageId":"133","endLine":4,"endColumn":71,"suggestions":"140"},{"ruleId":"130","severity":1,"message":"131","line":7,"column":17,"nodeType":"132","messageId":"133","endLine":7,"endColumn":20,"suggestions":"141"},{"ruleId":"130","severity":1,"message":"131","line":3,"column":73,"nodeType":"132","messageId":"133","endLine":3,"endColumn":76,"suggestions":"142"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["143","144"],["145","146"],["147","148"],["149","150"],["151","152"],["153","154"],["155","156"],["157","158"],["159","160"],{"messageId":"161","fix":"162","desc":"163"},{"messageId":"164","fix":"165","desc":"166"},{"messageId":"161","fix":"167","desc":"163"},{"messageId":"164","fix":"168","desc":"166"},{"messageId":"161","fix":"169","desc":"163"},{"messageId":"164","fix":"170","desc":"166"},{"messageId":"161","fix":"171","desc":"163"},{"messageId":"164","fix":"172","desc":"166"},{"messageId":"161","fix":"173","desc":"163"},{"messageId":"164","fix":"174","desc":"166"},{"messageId":"161","fix":"175","desc":"163"},{"messageId":"164","fix":"176","desc":"166"},{"messageId":"161","fix":"177","desc":"163"},{"messageId":"164","fix":"178","desc":"166"},{"messageId":"161","fix":"179","desc":"163"},{"messageId":"164","fix":"180","desc":"166"},{"messageId":"161","fix":"181","desc":"163"},{"messageId":"164","fix":"182","desc":"166"},"suggestUnknown",{"range":"183","text":"184"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"183","text":"185"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"186","text":"184"},{"range":"186","text":"185"},{"range":"187","text":"184"},{"range":"187","text":"185"},{"range":"188","text":"184"},{"range":"188","text":"185"},{"range":"189","text":"184"},{"range":"189","text":"185"},{"range":"190","text":"184"},{"range":"190","text":"185"},{"range":"191","text":"184"},{"range":"191","text":"185"},{"range":"192","text":"184"},{"range":"192","text":"185"},{"range":"193","text":"184"},{"range":"193","text":"185"},[401,404],"unknown","never",[1438,1441],[320,323],[305,308],[301,304],[3525,3528],[137,140],[154,157],[115,118]]